<?xml version="1.0"?>
<phpunit xmlns="https://schema.phpunit.de/coverage/1.0">
  <file name="Handler.php" path="/Exceptions">
    <totals>
      <lines total="68" comments="11" code="57" executable="11" executed="5" percent="45.45"/>
      <methods count="4" tested="1" percent="25.00"/>
      <functions count="0" tested="0" percent="0"/>
      <classes count="1" tested="0" percent="0.00"/>
      <traits count="0" tested="0" percent="0"/>
    </totals>
    <class name="App\Exceptions\Handler" start="11" executable="11" executed="5" crap="14.95">
      <namespace name="App\Exceptions"/>
      <method name="register" signature="register(): void" start="33" end="38" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="report" signature="report(Throwable $exception): void" start="40" end="47" crap="3.33" executable="3" executed="2" coverage="66.666666666667"/>
      <method name="invalidJson" signature="invalidJson($request, Illuminate\Validation\ValidationException $exception)" start="49" end="55" crap="2" executable="4" executed="0" coverage="0"/>
      <method name="render" signature="render($request, Throwable $e)" start="57" end="64" crap="2.15" executable="3" executed="2" coverage="66.666666666667"/>
    </class>
    <coverage>
      <line nr="35">
        <covered by="Tests\Feature\Admin\Category\AdminCategoryCreateTest::testItVisitCreateCategory"/>
        <covered by="Tests\Feature\Admin\Category\AdminCategoryDeleteTest::testItCanDeleteACategory"/>
        <covered by="Tests\Feature\Admin\Category\AdminCategoryEditTest::testItCanEditACategory"/>
        <covered by="Tests\Feature\Admin\Category\AdminCategoryIndexTest::testItListCategories"/>
        <covered by="Tests\Feature\Admin\Category\AdminCategoryStoreTest::testACategoryCanBeCreated"/>
        <covered by="Tests\Feature\Admin\Category\AdminCategoryUpdateTest::testItCanUpdateACategory"/>
        <covered by="Tests\Feature\Admin\Home\AdminHomeDashboardTest::testItAdminCanSeeHomeDashboard"/>
        <covered by="Tests\Feature\Admin\Home\AdminHomeDashboardTest::testUserCantSeeHomeDashboard"/>
        <covered by="Tests\Feature\Admin\Imports\ExcelExportProductsTest::testUserCanQueueProductsExport"/>
        <covered by="Tests\Feature\Admin\Imports\ExcelExportProductsTest::testUserCanStoreProductsExport"/>
        <covered by="Tests\Feature\Admin\Imports\ExcelExportProductsTest::testUserCanDownloadProductsExport"/>
        <covered by="Tests\Feature\Admin\Imports\ImportFileTest::testItCanImportProductsFile"/>
        <covered by="Tests\Feature\Admin\Product\AdminProductCreateTest::testItCanVisitAndFormCreateproduct"/>
        <covered by="Tests\Feature\Admin\Product\AdminProductCreateTest::testYouCanSeeCreateProductAndSeeLog"/>
        <covered by="Tests\Feature\Admin\Product\AdminProductDeleteTest::testItCanDeleteAProduct"/>
        <covered by="Tests\Feature\Admin\Product\AdminProductEditTest::testItCanSeeEditFormProduct"/>
        <covered by="Tests\Feature\Admin\Product\AdminProductIndexTest::testItCanSeeIndexAdminProducts"/>
        <covered by="Tests\Feature\Admin\Product\AdminProductListTest::testItVisitListProduct"/>
        <covered by="Tests\Feature\Admin\Product\AdminProductShowTest::testItCanSeeProduct"/>
        <covered by="Tests\Feature\Admin\Product\AdminProductStoreTest::testAProductCanBeCreated"/>
        <covered by="Tests\Feature\Admin\Product\AdminProductUpdateTest::testItCanUpdateAProduct"/>
        <covered by="Tests\Feature\Admin\Users\AdminUserEditTest::testItCanSeeEditUserForm"/>
        <covered by="Tests\Feature\Admin\Users\AdminUserIndexTest::testAdminCanVisitListUsers"/>
        <covered by="Tests\Feature\Admin\Users\AdminUserUpdateTest::testItCanUpdateAUserRole"/>
        <covered by="Tests\Feature\AuthenticationTest::test_users_can_not_authenticate_with_invalid_password"/>
        <covered by="Tests\Feature\BrowserSessionsTest::test_other_browser_sessions_can_be_logged_out"/>
        <covered by="Tests\Feature\Custom\Notifications\NotificationIndexTest::testItCanSeeListOfNotifications"/>
        <covered by="Tests\Feature\Custom\Orders\OrderIndexTest::testYouCanSeeListOfOrders"/>
        <covered by="Tests\Feature\Custom\Orders\ShoppingHistoryTest::testYouCanSeeYourShoppingHistory"/>
        <covered by="Tests\Feature\Custom\Product\ProductIndexTest::testGuestItListProduct"/>
        <covered by="Tests\Feature\DeleteAccountTest::test_user_accounts_can_be_deleted"/>
        <covered by="Tests\Feature\DeleteAccountTest::test_correct_password_must_be_provided_before_account_can_be_deleted"/>
        <covered by="Tests\Feature\ProfileInformationTest::test_current_profile_information_is_available"/>
        <covered by="Tests\Feature\ProfileInformationTest::test_profile_information_can_be_updated"/>
        <covered by="Tests\Feature\TwoFactorAuthenticationSettingsTest::test_two_factor_authentication_can_be_enabled"/>
        <covered by="Tests\Feature\TwoFactorAuthenticationSettingsTest::test_recovery_codes_can_be_regenerated"/>
        <covered by="Tests\Feature\TwoFactorAuthenticationSettingsTest::test_two_factor_authentication_can_be_disabled"/>
        <covered by="Tests\Feature\UpdatePasswordTest::test_password_can_be_updated"/>
        <covered by="Tests\Feature\UpdatePasswordTest::test_current_password_must_be_correct"/>
        <covered by="Tests\Feature\UpdatePasswordTest::test_new_passwords_must_match"/>
      </line>
      <line nr="42">
        <covered by="Tests\Feature\Admin\Home\AdminHomeDashboardTest::testUserCantSeeHomeDashboard"/>
        <covered by="Tests\Feature\Admin\Product\AdminProductStoreTest::testAProductCanBeCreated"/>
        <covered by="Tests\Feature\AuthenticationTest::test_users_can_not_authenticate_with_invalid_password"/>
        <covered by="Tests\Feature\Custom\Notifications\NotificationIndexTest::testItCanSeeListOfNotifications"/>
        <covered by="Tests\Feature\Custom\Orders\ShoppingHistoryTest::testYouCanSeeYourShoppingHistory"/>
        <covered by="Tests\Feature\Custom\Product\ProductIndexTest::testGuestItListProduct"/>
      </line>
      <line nr="46">
        <covered by="Tests\Feature\Admin\Home\AdminHomeDashboardTest::testUserCantSeeHomeDashboard"/>
        <covered by="Tests\Feature\Admin\Product\AdminProductStoreTest::testAProductCanBeCreated"/>
        <covered by="Tests\Feature\AuthenticationTest::test_users_can_not_authenticate_with_invalid_password"/>
        <covered by="Tests\Feature\Custom\Notifications\NotificationIndexTest::testItCanSeeListOfNotifications"/>
        <covered by="Tests\Feature\Custom\Orders\ShoppingHistoryTest::testYouCanSeeYourShoppingHistory"/>
        <covered by="Tests\Feature\Custom\Product\ProductIndexTest::testGuestItListProduct"/>
      </line>
      <line nr="59">
        <covered by="Tests\Feature\Admin\Home\AdminHomeDashboardTest::testUserCantSeeHomeDashboard"/>
        <covered by="Tests\Feature\Admin\Product\AdminProductStoreTest::testAProductCanBeCreated"/>
        <covered by="Tests\Feature\AuthenticationTest::test_users_can_not_authenticate_with_invalid_password"/>
        <covered by="Tests\Feature\Custom\Notifications\NotificationIndexTest::testItCanSeeListOfNotifications"/>
        <covered by="Tests\Feature\Custom\Orders\ShoppingHistoryTest::testYouCanSeeYourShoppingHistory"/>
        <covered by="Tests\Feature\Custom\Product\ProductIndexTest::testGuestItListProduct"/>
      </line>
      <line nr="63">
        <covered by="Tests\Feature\Admin\Home\AdminHomeDashboardTest::testUserCantSeeHomeDashboard"/>
        <covered by="Tests\Feature\Admin\Product\AdminProductStoreTest::testAProductCanBeCreated"/>
        <covered by="Tests\Feature\AuthenticationTest::test_users_can_not_authenticate_with_invalid_password"/>
        <covered by="Tests\Feature\Custom\Notifications\NotificationIndexTest::testItCanSeeListOfNotifications"/>
        <covered by="Tests\Feature\Custom\Orders\ShoppingHistoryTest::testYouCanSeeYourShoppingHistory"/>
        <covered by="Tests\Feature\Custom\Product\ProductIndexTest::testGuestItListProduct"/>
      </line>
    </coverage>
    <source>
      <line no="1">
        <token name="T_OPEN_TAG">&lt;?php</token>
      </line>
      <line no="2"/>
      <line no="3">
        <token name="T_NAMESPACE">namespace</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">App\Exceptions</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="4"/>
      <line no="5">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Throwable</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="6">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Illuminate\Validation\ValidationException</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="7">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Illuminate\Database\Eloquent\ModelNotFoundException</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="8">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Symfony\Component\Routing\Exception\RouteNotFoundException</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="9">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Illuminate\Foundation\Exceptions\Handler</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_AS">as</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">ExceptionHandler</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="10"/>
      <line no="11">
        <token name="T_CLASS">class</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Handler</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EXTENDS">extends</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">ExceptionHandler</token>
      </line>
      <line no="12">
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="13">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="14">
        <token name="T_DOC_COMMENT">     * A list of the exception types that are not reported.</token>
      </line>
      <line no="15">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="16">
        <token name="T_DOC_COMMENT">     * @var array&lt;int, class-string&lt;Throwable&gt;&gt;</token>
      </line>
      <line no="17">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="18">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$dontReport</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
      </line>
      <line no="19">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">//</token>
      </line>
      <line no="20">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="21"/>
      <line no="22">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="23">
        <token name="T_DOC_COMMENT">     * A list of the inputs that are never flashed for validation exceptions.</token>
      </line>
      <line no="24">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="25">
        <token name="T_DOC_COMMENT">     * @var array&lt;int, string&gt;</token>
      </line>
      <line no="26">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="27">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$dontFlash</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
      </line>
      <line no="28">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'current_password'</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="29">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'password'</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="30">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'password_confirmation'</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="31">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="32"/>
      <line no="33">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">register</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">void</token>
      </line>
      <line no="34">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="35">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">reportable</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">Throwable</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$e</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="36">
        <token name="T_WHITESPACE">            </token>
        <token name="T_COMMENT">//</token>
      </line>
      <line no="37">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="38">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="39"/>
      <line no="40">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">report</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">Throwable</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$exception</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">void</token>
      </line>
      <line no="41">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="42">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">app</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">bound</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'sentry'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_AND">&amp;&amp;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">shouldReport</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$exception</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="43">
        <token name="T_WHITESPACE">            </token>
        <token name="T_STRING">app</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'sentry'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">captureException</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$exception</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="44">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="45"/>
      <line no="46">
        <token name="T_WHITESPACE">        </token>
        <token name="T_STRING">parent</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">report</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$exception</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="47">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="48"/>
      <line no="49">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">invalidJson</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">ValidationException</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$exception</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="50">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="51">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">response</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">json</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_OPEN_SQUARE">[</token>
      </line>
      <line no="52">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Mensaje'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">__</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Los datos proporcionados no son validos.'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="53">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'errores'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$exception</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">errors</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="54">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$exception</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">status</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="55">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="56"/>
      <line no="57">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">render</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Throwable</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$e</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="58">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="59">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$e</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_INSTANCEOF">instanceof</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">ModelNotFoundException</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="60">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">response</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">json</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"Error"</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"producto no encontrado"</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">400</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="61">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="62"/>
      <line no="63">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">parent</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">render</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$e</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="64">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="65"/>
      <line no="66"/>
      <line no="67">
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="68"/>
    </source>
  </file>
</phpunit>
